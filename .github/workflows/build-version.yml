name: "Build Version"

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

permissions:
  contents: read
  packages: write

jobs:
  build-containers-common:
    runs-on: ubuntu-latest
    outputs:
      containerver: ${{ steps.getcontainerver.outputs.containerver }}
    steps:
      - name: Get Container Version
        id: getcontainerver
        run: |
          echo "containerver=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"

  build-containers:
    needs: build-containers-common
    strategy:
      matrix:
        include:
          - runnertags: ubuntu-latest
            arch: amd64
          - runnertags: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.runnertags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and Push Image
        env:
          CONTAINERVER: ${{ needs.build-containers-common.outputs.containerver }}
          NEXT_PUBLIC_VERSION: ${{ github.ref_name }}
          OWNER: ${{ github.repository_owner }}
          REPO_FULL: ${{ github.repository }} # e.g. Owner/Repo
        run: |
          set -euo pipefail
          REPO="${REPO_FULL##*/}"                         # strip owner -> "Repo"
          IMAGE="ghcr.io/${OWNER,,}/${REPO,,}"            # lowercased
          echo "Building image: $IMAGE:${CONTAINERVER}-${{ matrix.arch }}"

          docker buildx build --platform linux/${{ matrix.arch }} \
            -f Dockerfile.dev \
            -t "$IMAGE:${CONTAINERVER}-${{ matrix.arch }}" \
            --build-arg NEXT_PUBLIC_VERSION="${NEXT_PUBLIC_VERSION}" \
            --provenance=false --sbom=false \
            --output "type=registry,name=$IMAGE:${CONTAINERVER}-${{ matrix.arch }}" .

  build-container-manifest:
    needs: [build-containers, build-containers-common]
    runs-on: ubuntu-latest
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Create Docker Manifest
        env:
          CONTAINERVER: ${{ needs.build-containers-common.outputs.containerver }}
          OWNER: ${{ github.repository_owner }}
          REPO_FULL: ${{ github.repository }}
        run: |
          set -euo pipefail
          REPO="${REPO_FULL##*/}"
          IMAGE="ghcr.io/${OWNER,,}/${REPO,,}"
          echo "Creating manifests for $IMAGE:${CONTAINERVER} and :latest"

          echo "Verifying AMD64 image:"
          docker buildx imagetools inspect "$IMAGE:${CONTAINERVER}-amd64"

          echo "Verifying ARM64 image:"
          docker buildx imagetools inspect "$IMAGE:${CONTAINERVER}-arm64"

          # Remove existing manifests if present (ignore errors)
          docker manifest rm "$IMAGE:${CONTAINERVER}" || true
          docker manifest rm "$IMAGE:latest" || true

          # Version-specific manifest
          docker manifest create "$IMAGE:${CONTAINERVER}" \
            --amend "$IMAGE:${CONTAINERVER}-amd64" \
            --amend "$IMAGE:${CONTAINERVER}-arm64"
          docker manifest push "$IMAGE:${CONTAINERVER}"

          # Latest manifest
          docker manifest create "$IMAGE:latest" \
            --amend "$IMAGE:${CONTAINERVER}-amd64" \
            --amend "$IMAGE:${CONTAINERVER}-arm64"
          docker manifest push "$IMAGE:latest"

      - name: Verify Manifest
        env:
          OWNER: ${{ github.repository_owner }}
          REPO_FULL: ${{ github.repository }}
        run: |
          REPO="${REPO_FULL##*/}"
          IMAGE="ghcr.io/${OWNER,,}/${REPO,,}"
          docker manifest inspect "$IMAGE:latest"